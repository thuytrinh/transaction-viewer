apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.jakewharton.hugo'

android {
  compileSdkVersion 25
  buildToolsVersion '25.0.0'
  dataBinding { enabled = true }

  lintOptions {
    abortOnError false
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  defaultConfig {
    applicationId 'com.thuytrinh.transactionviewer'
    minSdkVersion 15
    targetSdkVersion 25
    versionCode 1
    versionName '1.0.0'
    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  // To workaround https://github.com/robolectric/robolectric/issues/2647.
  applicationVariants.all { variant ->
    def productFlavor = variant.productFlavors[0] != null ? "${variant.productFlavors[0].name.capitalize()}" : ""
    def buildType = "${variant.buildType.name.capitalize()}"
    tasks["compile${productFlavor}${buildType}UnitTestSources"].dependsOn(tasks["merge${productFlavor}${buildType}Assets"])
  }
}

dependencies {
  // The best adapter is no adapter! This library helps me
  // only focus on building business logic with data (via `ObservableList`)
  // instead of building lots of infrastructures
  // (e.g Adapters and ViewHolders) to render data.
  compile 'me.tatarka.bindingcollectionadapter:bindingcollectionadapter-recyclerview:1.3.0'
  compile 'com.android.support:appcompat-v7:25.0.0'
  compile 'com.android.support:recyclerview-v7:25.0.0'
  compile 'com.android.support:design:25.0.0'
  compile 'com.google.code.gson:gson:2.8.0'
  compile 'io.reactivex:rxandroid:1.2.1'
  compile 'io.reactivex:rxjava:1.2.2'

  // To automatically generate thread-safe data models.
  // And most importantly, to generate custom TypeAdapterFactories
  // to achieve stream-based JSON parsing which doesn't rely on reflection.
  annotationProcessor 'org.immutables:value:2.3.9'
  provided 'org.immutables:value:2.3.9:annotations'
  provided 'org.immutables:builder:2.3.9'
  provided 'org.immutables:gson:2.3.9:annotations'

  compile 'com.google.dagger:dagger:2.7'
  annotationProcessor 'com.google.dagger:dagger-compiler:2.7'

  testCompile 'junit:junit:4.12'
  testCompile 'org.assertj:assertj-core:1.7.0'
  testCompile 'org.mockito:mockito-core:1.10.19'
  testCompile 'org.robolectric:robolectric:3.1.4'

  // To easily create collections during writing unit tests.
  testCompile 'com.google.guava:guava:20.0'
}
